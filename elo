#!/usr/bin/env python3

import sys, csv
from collections import defaultdict as dd

df = lambda: [1000] # New players start at 1000
global_k = 32 # This value seems fairly standard for global k-factors

if __name__ == "__main__":
    for arg in sys.argv[1:]: # For each input csv file (argv[0] is this program)
        players = dd(df) # Player dictionary
        with open(arg) as file:
            reader = csv.reader(file)
            for winner, loser in reader: # Iterate match-by-match
                # Most recent ratings
                winner_rating = players[winner][-1]
                loser_rating = players[loser][-1]

                # k-factor could be based on rating and number of matches played
                winner_k = global_k
                loser_k = global_k

                # Expectation
                expected_outcome = 1 / (1 + 10**((loser_rating - winner_rating)/400))

                # Update ratings
                players[winner].append(winner_rating + winner_k*(1 - expected_outcome))
                players[loser].append(loser_rating + loser_k*(expected_outcome - 1))

            # Print current ratings
            for player, ratings in players.items():
                print(player, ratings[-1])
